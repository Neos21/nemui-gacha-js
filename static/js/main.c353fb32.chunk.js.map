{"version":3,"sources":["lib/index.ts","App.tsx","index.tsx"],"names":["removeGacha","input","replace","parseNegative","tokenizer","parsed","tokenize","replaces","lastIndex","length","last","pos","surface_form","endsWith","push","index","word","match","conjugated_type","startsWith","prevIndex","prev","includes","basic_form","pos_detail_1","reduce","current","replaceFound","find","NemuiGachaError","message","name","console","error","this","InvalidArgumentsError","ParseNegativeRuntimeError","originalError","ParseNegativeFailedError","nemuiGacha","exec","isForceNegative","undefined","trim","negative","removedInput","isParseNegative","Math","random","App","props","state","onChangeText","event","setState","target","value","onChangeCheckbox","checked","onSubmit","preventDefault","result","kuromoji","dicPath","build","window","location","search","params","slice","split","key","decodeURIComponent","force","q","header","footer","className","href","rel","type","onChange","placeholder","onClick","disabled","tabIndex","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c353fb32.chunk.js","sourcesContent":["/**\n * エントリポイント\n * \n * @param input 入力文字列\n * @param tokenizer kuromoji の tokenizer\n * @param isForceNegative true を指定した場合は必ず否定形を返す\n * @return 入力文字列をランダムに否定形にした文字列\n * @throws 引数不正・否定形変換に失敗した場合\n */\nfunction exec(input: string, tokenizer: { tokenize: Function }, isForceNegative: boolean = false): string {\n  if(input === undefined || input === null || input.trim() === '') {\n    throw new InvalidArgumentsError('input is null');\n  }\n  if(tokenizer === undefined || tokenizer === null) {\n    throw new InvalidArgumentsError('tokenizer is null');\n  }\n  \n  // トリムする\n  input = input.trim();\n  // 末尾に「ガチャ」の文字列が遭ったら除去する\n  const removedInput = removeGacha(input);\n  // 「ガチャ」としか書かれていなかったら終わり\n  if(removedInput === '') {\n    return input + 'じゃない';\n  }\n  \n  // 先に否定形に変換できるかどうか確認する\n  let negative;\n  try {\n    negative = parseNegative(removedInput, tokenizer);\n  }\n  catch(error) {\n    throw new ParseNegativeRuntimeError('Failed to parse negative', error);  // 万が一変換中に例外が発生した場合\n  }\n  // 全く変換されていなかったらエラーを返す\n  if(removedInput === negative) {\n    throw new ParseNegativeFailedError('Result text is the same as input text');\n  }\n  \n  // 必ず否定形を返す場合\n  if(isForceNegative) {\n    return negative;\n  }\n  \n  // 否定形に変換するかどうかランダムに決める\n  const isParseNegative = (Math.random() >= 0.5);\n  \n  // 否定形か「ガチャ」を除去した入力文字列を返す\n  return isParseNegative ? negative : removedInput;\n}\n\n/**\n * 末尾に「ガチャ」の文字列があったら除去する\n * \n * @param input 入力文字列\n * @return 末尾に「ガチャ」の文字列があったら除去した文字列・そうでなければ入力文字列そのまま\n */\nfunction removeGacha(input: string): string {\n  const removed = input.replace((/(ガチャ|ｶﾞﾁｬ|がちゃ)$/u), '');\n  return removed;\n}\n\n/**\n * 否定形に変換する\n * \n * @param input 入力文字列\n * @param tokenizer kuromoji の tokenizer\n * @return 入力文字列を否定形にした文字列\n */\nfunction parseNegative(input: string, tokenizer: { tokenize: Function }): string {\n  const parsed = tokenizer.tokenize(input);\n  \n  // 変換する節の位置と変換したい文字列を控える配列\n  const replaces: Array<{ index: number, word: string }> = [];\n  \n  // 最後の節を検索する\n  const lastIndex = parsed.length - 1;\n  const last = parsed[lastIndex];\n  if(last.pos === '形容詞') {\n    if(last.surface_form.endsWith('い')) {\n      replaces.push({ index: lastIndex, word: last.surface_form.replace((/い$/u), 'くない') });\n    }\n  }\n  else if(last.pos === '動詞') {\n    if(last.surface_form.match((/(す|ず)(る|れ)$/u))) {\n      replaces.push({ index: lastIndex, word: last.surface_form.replace((/す(る|れ)$/u), 'すない').replace((/ず(る|れ)$/u), 'じない') });\n    }\n    else if(last.conjugated_type === '一段') {\n      replaces.push({ index: lastIndex, word: last.surface_form.replace((/る$/u), 'ない') });\n    }\n    else if(last.conjugated_type.startsWith('五段')) {\n      replaces.push({ index: lastIndex, word: last.surface_form\n        .replace((/う$/u), 'わ').replace((/く$/u), 'か').replace((/す$/u), 'さ').replace((/つ$/u), 'た').replace((/ぬ$/u), 'な')\n        .replace((/ふ$/u), 'は').replace((/む$/u), 'ま').replace((/ゆ$/u), 'や').replace((/る$/u), 'ら') + 'ない' });\n    }\n  }\n  else if(last.pos === '助動詞') {\n    if(last.surface_form === 'た' && parsed.length >= 2) {\n      // 「た」の場合、手前の節を確認するので、手前に節がない場合は処理をしない\n      const prevIndex = parsed.length - 2;\n      const prev = parsed[prevIndex];\n      if(prev.pos === '動詞' && ['て', 'い'].includes(prev.surface_form)) {\n        replaces.push({ index: lastIndex, word: 'なかった' });\n      }\n      else if(prev.surface_form === '来') {\n        replaces.push({ index: lastIndex, word: 'ない' });\n      }\n      else if(prev.surface_form.endsWith('い')) {\n        replaces.push({ index: lastIndex, word: 'てない' });\n      }\n      else if(prev.pos === '形容詞') {\n        // 直前の文字列の「基本形」を利用し、末尾が形容詞だった場合と同じ変換を行う\n        if(prev.basic_form.endsWith('い')) {\n          replaces.push({ index: prevIndex, word: prev.basic_form.replace((/い$/u), 'くなかっ') }); // 末尾の「た」をそのまま使う\n        }\n      }\n      else if(prev.pos === '動詞') {\n        // 直前の文字列の「基本形」を利用し、末尾が動詞だった場合と同じ変換を行う\n        if(prev.conjugated_type === '一段') {\n          replaces.push({ index: prevIndex, word: prev.basic_form.replace((/る$/u), 'なかっ') });\n        }\n        else if(prev.conjugated_type.startsWith('五段')) {\n          replaces.push({ index: prevIndex, word: prev.basic_form\n            .replace((/う$/u), 'わ').replace((/く$/u), 'か').replace((/す$/u), 'さ').replace((/つ$/u), 'た').replace((/ぬ$/u), 'な')\n            .replace((/ふ$/u), 'は').replace((/む$/u), 'ま').replace((/ゆ$/u), 'や').replace((/る$/u), 'ら') + 'なかっ' });\n        }\n      }\n    }\n    else if(last.surface_form === 'たい') {\n      replaces.push({ index: lastIndex, word: 'たくない' });\n    }\n    else if(last.surface_form === 'ない') {\n      replaces.push({ index: lastIndex, word: 'なくない' });\n    }\n    else if(last.surface_form === 'ます') {\n      replaces.push({ index: lastIndex, word: 'ません' });\n    }\n  }\n  else if(last.pos === '助詞') {\n    if(last.surface_form === 'て') {\n      replaces.push({ index: lastIndex, word: 'ない' });\n    }\n  }\n  else if(last.pos === '名詞') {\n    if(['固有名詞', '一般', '代名詞'].includes(last.pos_detail_1)) {\n      replaces.push({ index: lastIndex, word: last.surface_form + 'じゃない' });\n    }\n    else if(['サ変接続', '接尾'].includes(last.pos_detail_1)) {\n      replaces.push({ index: lastIndex, word: last.surface_form + 'しない' });\n    }\n  }\n  \n  // 変換する\n  const result = parsed.reduce((prev: string, current: any, index: number) => {\n    const replaceFound = replaces.find(replace => replace.index === index);\n    return prev + (replaceFound ? replaceFound.word : current.surface_form);\n  }, '');\n  return result;\n}\n\n/** ねむいガチャエラー : https://exhikkii.hatenablog.com/entry/2019/05/01/TypeScript_%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%AE%E4%BB%95%E6%96%B9 */\nclass NemuiGachaError implements Error {\n  /** エラー名 */\n  public name: string = 'NemuiGachaError';\n  \n  /**\n   * コンストラクタ\n   * \n   * @param message メッセージ\n   */\n  constructor(public message: string) {\n    if(typeof console !== 'undefined') {\n      console.error(`Name: ${this.name} , Message: ${this.message}`);\n    }\n  }\n  \n  /**\n   * To String\n   * \n   * @return To String\n   */\n  toString() {\n    return `Name: ${this.name} , Message: ${this.message}`;\n  }\n}\n\n/** 引数エラー */\nclass InvalidArgumentsError extends NemuiGachaError {\n  /** エラー名 */\n  public name: string = 'InvalidArgumentsError';\n}\n\n/** 否定形変換実行時エラー */\nclass ParseNegativeRuntimeError extends NemuiGachaError {\n  /** エラー名 */\n  public name: string = 'ParseNegativeRuntimeError';\n  \n  /**\n   * コンストラクタ\n   * \n   * @param message メッセージ\n   * @param originalError 元のエラー\n   */\n  constructor(public message: string, public originalError: Error) {\n    super(message);\n    if(typeof console !== 'undefined') {\n      console.error(this.originalError);\n    }\n  }\n}\n\n/** 否定形変換エラー */\nclass ParseNegativeFailedError extends NemuiGachaError {\n  /** エラー名 */\n  public name: string = 'ParseNegativeFailedError';\n}\n\n/** nemuiGacha */\nconst nemuiGacha = {\n  exec,\n  removeGacha,\n  parseNegative,\n  NemuiGachaError,\n  InvalidArgumentsError,\n  ParseNegativeRuntimeError,\n  ParseNegativeFailedError\n};\n\nexport default nemuiGacha;\n","import React from 'react';\n\nimport * as kuromoji from 'kuromoji';\n\nimport nemuiGacha from './lib/index';\n\nimport './App.scss';\n\nexport default class App extends React.Component {\n  /** State : エラー回避のため型定義のみしておく */\n  state: Readonly<any>;\n  \n  /**\n   * コンストラクタ : State のダミー初期値を用意する\n   * \n   * @param props Props\n   */\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      input          : 'ねむい',  // 入力文字列\n      tokenizer      : null,      // kuromoji が生成する tokenizer を控える\n      isForceNegative: false,     // 必ず否定形に変換するかどうか\n      result         : '',        // 結果文字列\n      error          : ''         // エラー発生時に値を入れる\n    };\n  }\n  \n  /** 初期化処理 : kuromoji の tokenizer を生成する */\n  componentWillMount() {\n    kuromoji.builder({\n      dicPath: './dict'  // 予め kuromoji の dict/ ディレクトリを public/ 配下にコピーしておく\n    }).build((error: Error, tokenizer: kuromoji.Tokenizer<any>) => {  // ジェネリクス http://js.studio-kingdom.com/typescript/handbook/generics\n      // XMLHttpRequest でのエラーは try / catch でも補足できずココに到達しなかったため、特に対応しない\n      if(error) {\n        return console.error('Failed to build kuromoji', error);\n      }\n      \n      this.setState({\n        tokenizer: tokenizer\n      });\n      \n      // クエリストリングが存在した場合は初期処理を行う\n      if(window.location.search) {\n        // 先頭の '?' を除去し連想配列を作る\n        const params = window.location.search.slice(1).split('&').reduce((prev: any, current) => {\n          const split = current.split('=');\n          const key   = split[0];\n          const value = window.decodeURIComponent(split[1]);\n          prev[key] = value;\n          return prev;\n        }, {});\n        \n        // 'force' パラメータが存在すれば強制的に否定形にする (値はなんでも良い・値未指定でも 'undefined' が入る)\n        if(params.force) {\n          this.setState({\n            isForceNegative: true\n          });\n        }\n        \n        // 'q' パラメータが存在すればその値でガチャを初期実行する\n        if(params.q) {\n          this.setState({\n            input: params.q\n          });\n          this.exec();\n        }\n      }\n    });\n  }\n  \n  /**\n   * テキストボックスの値を State で明示的に管理するために必要 : https://qiita.com/koba04/items/40cc217ab925ef651113\n   * \n   * @param event イベント\n   */\n  onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {  // 型定義 : https://qiita.com/natsuhiko/items/5d2a526a217e05162a0a\n    this.setState({\n      input: event.target.value\n    });\n  }\n  \n  /**\n   * チェックボックスの値を State で明示的に管理する\n   * \n   * @param event イベント\n   */\n  onChangeCheckbox = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      isForceNegative: event.target.checked\n    });\n  }\n  \n  /**\n   * ガチャ実行 : this.setState が undefined になるのを防ぐためアロー関数にする : https://qiita.com/kilo/items/714287a3ea41b4187545\n   * \n   * @param event イベント\n   */\n  onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();  // https://react.keicode.com/basics/react-form-basics.php\n    this.setState({\n      result: '',\n      error: ''\n    });\n    this.exec();\n  }\n  \n  /** ガチャを実行する */\n  exec() {\n    if(!this.state.input.trim()) {\n      this.setState({\n        error: 'Please input text'\n      });\n      return;\n    }\n    \n    try {\n      const result = nemuiGacha.exec(this.state.input, this.state.tokenizer, this.state.isForceNegative);\n      this.setState({\n        result: result\n      });\n    }\n    catch(error) {\n      if(error instanceof nemuiGacha.InvalidArgumentsError || error instanceof nemuiGacha.ParseNegativeFailedError) {\n        this.setState({\n          error: error.message\n        });\n      }\n      else if(error instanceof nemuiGacha.ParseNegativeRuntimeError) {\n        this.setState({\n          error: '(Runtime Error) ' + error.message\n        });\n      }\n      else {\n        this.setState({\n          error: 'Unexpected Error'\n        });\n      }\n    }\n  }\n  \n  /** レンダリングする */\n  render() {\n    const header = (\n      <header>\n        <h1>Nemui Gacha</h1>\n      </header>\n    );\n    const footer = (\n      <footer>\n        <div className=\"links\">\n          <span>Author : <a href=\"http://neo.s21.xrea.com/\"  target=\"_blank\" rel=\"noopener noreferrer\">Neo</a></span>\n          <span><a href=\"https://github.com/Neos21/nemui-gacha-js/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></span>\n        </div>\n      </footer>\n    );\n    \n    if(!this.state.tokenizer) {\n      return (\n        <div className=\"app\">\n          {header}\n          <main className=\"loading\">\n            <div className=\"progress-wrapper\">\n              <div className=\"progress\">Loading...</div>\n            </div>\n          </main>\n          {footer}\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"app\">\n        {header}\n        <main>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"input-form\">\n              <input type=\"text\" className=\"input\" value={this.state.input} onChange={this.onChangeText} placeholder=\"ねむい\" />\n              <span className=\"gacha\">ガチャ</span>\n            </div>\n            <div>\n              <button type=\"submit\" className=\"submit\" onClick={this.onSubmit} disabled={!this.state.input.trim()}>ガチャ</button>\n            </div>\n            <div className=\"is-force-negative\">\n              <input type=\"checkbox\" tabIndex={-1} checked={this.state.isForceNegative} onChange={this.onChangeCheckbox} />\n            </div>\n          </form>\n          { this.state.result &&\n            <div className=\"result\">{this.state.result}</div>\n          }\n          { this.state.error &&\n            <div className=\"error\">Error : {this.state.error}</div>\n          }\n        </main>\n        {footer}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}